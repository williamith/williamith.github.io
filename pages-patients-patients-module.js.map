{"version":3,"sources":["webpack:///./src/app/pages/patients/patients-routing.module.ts","webpack:///./src/app/pages/patients/patients.module.ts","webpack:///./src/app/pages/patients/view-all-patients/create-patient/create-patient.component.css","webpack:///./src/app/pages/patients/view-all-patients/create-patient/create-patient.component.html","webpack:///./src/app/pages/patients/view-all-patients/create-patient/create-patient.component.ts","webpack:///./src/app/pages/patients/view-all-patients/patient-profile/create-patient-lab/create-patient-lab.component.css","webpack:///./src/app/pages/patients/view-all-patients/patient-profile/create-patient-lab/create-patient-lab.component.html","webpack:///./src/app/pages/patients/view-all-patients/patient-profile/create-patient-lab/create-patient-lab.component.ts","webpack:///./src/app/pages/patients/view-all-patients/patient-profile/patient-profile.component.css","webpack:///./src/app/pages/patients/view-all-patients/patient-profile/patient-profile.component.html","webpack:///./src/app/pages/patients/view-all-patients/patient-profile/patient-profile.component.ts","webpack:///./src/app/pages/patients/view-all-patients/view-all-patients.component.css","webpack:///./src/app/pages/patients/view-all-patients/view-all-patients.component.html","webpack:///./src/app/pages/patients/view-all-patients/view-all-patients.component.ts","webpack:///./src/app/shared/services/current-patient/current-patient.service.ts","webpack:///./src/app/shared/services/get-all-lab-types/get-all-lab-types.service.ts","webpack:///./src/app/shared/services/get-patient-labs/get-patient-labs.service.ts","webpack:///./src/app/shared/services/view-all-patients/view-all-patients.service.ts"],"names":[],"mappings":"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","file":"pages-patients-patients-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ViewAllPatientsComponent } from './view-all-patients/view-all-patients.component';\nimport { CreatePatientComponent } from './view-all-patients/create-patient/create-patient.component';\nimport { PatientProfileComponent } from './view-all-patients/patient-profile/patient-profile.component';\nimport { CreatePatientLabComponent } from './view-all-patients/patient-profile/create-patient-lab/create-patient-lab.component';\n\nconst routes: Routes = [\n  { path: '', component: ViewAllPatientsComponent },\n  { path: 'new', component: CreatePatientComponent },\n  { path: 'profile/lab', component: CreatePatientLabComponent },\n  { path: 'profile', component: PatientProfileComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PatientsRoutingModule { }","import { MaterialModule } from './../../shared/material/material.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PatientsRoutingModule } from './patients-routing.module';\r\nimport { ViewAllPatientsComponent } from './view-all-patients/view-all-patients.component';\r\nimport { CreatePatientComponent } from './view-all-patients/create-patient/create-patient.component';\r\nimport { PatientProfileComponent } from './view-all-patients/patient-profile/patient-profile.component';\r\nimport { CreatePatientLabComponent } from './view-all-patients/patient-profile/create-patient-lab/create-patient-lab.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    PatientsRoutingModule,\r\n    MaterialModule,\r\n    FormsModule\r\n  ],\r\n  declarations: [\r\n    ViewAllPatientsComponent,\r\n    CreatePatientComponent,\r\n    PatientProfileComponent,\r\n    CreatePatientLabComponent\r\n  ]\r\n})\r\nexport class PatientsModule { }\r\n","module.exports = \"mat-form-field {\\r\\n    font-size: 0.9em;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF0aWVudHMvdmlldy1hbGwtcGF0aWVudHMvY3JlYXRlLXBhdGllbnQvY3JlYXRlLXBhdGllbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnRzL3ZpZXctYWxsLXBhdGllbnRzL2NyZWF0ZS1wYXRpZW50L2NyZWF0ZS1wYXRpZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmb250LXNpemU6IDAuOWVtO1xyXG59Il19 */\"","module.exports = \"<h1>\\n  <i class=\\\"fas fa-users d-inline-block mr-3\\\"></i>New Patient\\n  <div class=\\\"d-inline-block float-right\\\">\\n    <button mat-raised-button routerLink=\\\"../\\\">\\n      <i class=\\\"fas fa-arrow-left mr-3\\\"></i>Patients</button>\\n  </div>\\n</h1>\\n\\n\\n<form #input=\\\"ngForm\\\" (ngSubmit)=\\\"createPatient()\\\">\\n  <mat-form-field appearance=\\\"outline\\\" class=\\\"mr-3\\\">\\n    <mat-label>First Name</mat-label>\\n    <input matInput class=\\\"mr-3\\\" type=\\\"text\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"patient.firstName\\\">\\n  </mat-form-field>\\n  <mat-form-field appearance=\\\"outline\\\" class=\\\"mr-3\\\">\\n    <mat-label>Last Name</mat-label>\\n    <input matInput class=\\\"mr-3\\\" type=\\\"text\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"patient.lastName\\\">\\n  </mat-form-field>\\n  <mat-form-field appearance=\\\"outline\\\" class=\\\"mr-3\\\">\\n    <mat-label>Patient ID</mat-label>\\n    <input matInput class=\\\"mr-3\\\" type=\\\"text\\\" name=\\\"patientId\\\" [(ngModel)]=\\\"patient.patientId\\\">\\n  </mat-form-field>\\n  <button class=\\\"btn-block\\\" type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\">\\n    <i class=\\\"fas fa-user-plus mr-3\\\"></i>Create Patient</button>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Component({\n  selector: 'app-create-patient',\n  templateUrl: './create-patient.component.html',\n  styleUrls: ['./create-patient.component.css']\n})\nexport class CreatePatientComponent implements OnInit {\n  patient = {\n\t  patientId: '',\n    firstName: '',\n    lastName: '',\n\tisHidden: false\n  };\n  private url: string = 'http://localhost:44300/api/patients';\n\n  constructor(private http: Http) { }\n\n  ngOnInit() {\n  }\n\n  createPatient() {\n    this.http.post(this.url, this.patient)\n      .subscribe(response => {\n        console.log(response.json());\n    });\n  }\n}\n","module.exports = \"mat-form-field {\\r\\n    font-size: 0.9em;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF0aWVudHMvdmlldy1hbGwtcGF0aWVudHMvcGF0aWVudC1wcm9maWxlL2NyZWF0ZS1wYXRpZW50LWxhYi9jcmVhdGUtcGF0aWVudC1sYWIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnRzL3ZpZXctYWxsLXBhdGllbnRzL3BhdGllbnQtcHJvZmlsZS9jcmVhdGUtcGF0aWVudC1sYWIvY3JlYXRlLXBhdGllbnQtbGFiLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtZm9ybS1maWVsZCB7XHJcbiAgICBmb250LXNpemU6IDAuOWVtO1xyXG59Il19 */\"","module.exports = \"<h1>\\n  <i class=\\\"fas fa-user mr-3\\\"></i>{{patient.lastName}}, {{patient.firstName}}\\n  <button mat-raised-button class=\\\"float-right\\\" routerLink=\\\"../\\\">\\n    <i class=\\\"fas fa-arrow-left mr-3\\\"></i>Patient Profile</button>\\n</h1>\\n\\n\\n<table class=\\\"table table-hover\\\">\\n  <thead>\\n    <tr>\\n      <th class=\\\"mat-subheading-2\\\">Type</th>\\n      <th class=\\\"mat-subheading-2\\\">Value</th>\\n      <th class=\\\"mat-subheading-2\\\">History</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let labType of labTypes; let i = index\\\">\\n      <td>{{labType.labType}}</td>\\n      <td>\\n        <mat-form-field appearance=\\\"outline\\\">\\n          <mat-label>Enter Lab Value</mat-label>\\n          <input matInput type=\\\"number\\\" name=\\\"labValue\\\" (click)=\\\"initializeLabs()\\\" (keyup)=\\\"onValueChanged(i, $event)\\\">\\n        </mat-form-field>\\n      </td>\\n      <td>View Lab History</td>\\n    </tr>\\n  </tbody>\\n</table>\\n\\n<p>\\n  <button mat-raised-button color=\\\"primary\\\" class=\\\"btn-block\\\" (click)=\\\"postLabs()\\\">\\n    <i class=\\\"fas fa-clipboard-check mr-3\\\"></i>Create Labs</button>\\n</p>\"","import { CurrentPatientService } from './../../../../../shared/services/current-patient/current-patient.service';\nimport { Component, OnInit } from '@angular/core';\nimport { GetAllLabTypesService } from 'src/app/shared/services/get-all-lab-types/get-all-lab-types.service';\nimport { Http } from '@angular/http';\n\n@Component({\n  selector: 'create-patient-lab',\n  templateUrl: './create-patient-lab.component.html',\n  styleUrls: ['./create-patient-lab.component.css']\n})\nexport class CreatePatientLabComponent implements OnInit {\n  patient: any;\n  labTypes = [];\n  labs = [];\n  labsInitialized = false;\n\n  private url: string = 'http://localhost:44400/api/labscollection';\n\n  constructor(\n    private http: Http,\n    private currentPatientService: CurrentPatientService,\n    private getAllLabTypesService: GetAllLabTypesService) {\n  }\n\n  ngOnInit() {\n    this.patient = this.currentPatientService.getCurrentPatient();\n\n    this.getAllLabTypesService.getAllLabTypes()\n      .subscribe(response => {\n        this.labTypes = response.json();\n      });\n  }\n\n  initializeLabs() {\n    let todayDate = new Date();\n    let todayDateISO = todayDate.toISOString();\n    if (this.labsInitialized === false) {\n      for (let index = 0; index < this.labTypes.length; index++) {\n        this.labs[index] = {\n          patientId: this.patient.patientId,\n          labType: this.labTypes[index].labType,\n          labValue: 0,\n          date: todayDateISO,\n          isHidden: false\n        };\n      };\n      this.labsInitialized = true;\n    }\n  }\n\n  onValueChanged(index: any, event: any) {\n    this.labs[index].labValue = parseFloat(event.target.value);\n  }\n\n  postLabs() {\n    for (let index = 0; index < this.labs.length; index++) {\n      if (this.labs[index].labValue > 0) {\n        this.http.post(this.url, this.labs[index])\n          .subscribe(response => {\n            console.log(response.json());\n        });\n      }\n    }\n  }\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnRzL3ZpZXctYWxsLXBhdGllbnRzL3BhdGllbnQtcHJvZmlsZS9wYXRpZW50LXByb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>\\r\\n  <i class=\\\"fas fa-user mr-3\\\"></i>{{patient.lastName}}, {{patient.firstName}}\\r\\n  <div class=\\\"btn-group float-right\\\">\\r\\n    <button mat-raised-button class=\\\"mr-3\\\" routerLink=\\\"../\\\">\\r\\n      <i class=\\\"fas fa-arrow-left mr-3\\\"></i>Patients</button>\\r\\n    <button *ngIf=\\\"isVisible\\\" mat-raised-button class=\\\"mr-3\\\" (click)=\\\"isVisible = !isVisible\\\">\\r\\n      <i class=\\\"fas fa-edit mr-3\\\"></i>Edit Past Labs<Label></Label></button>\\r\\n    <button *ngIf=\\\"!isVisible\\\" mat-raised-button class=\\\"mr-3\\\" (click)=\\\"isVisible = !isVisible\\\">\\r\\n      <i class=\\\"fas fa-user mr-3\\\"></i>Patient Profile<Label></Label></button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"lab\\\">\\r\\n      <i class=\\\"fas fa-vial mr-3\\\"></i>Add Labs<Label></Label></button>\\r\\n  </div>\\r\\n</h1>\\r\\n\\r\\n<table *ngIf=\\\"isVisible\\\" class=\\\"table table-hover\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th class=\\\"mat-subheading-2\\\">Type</th>\\r\\n      <th class=\\\"mat-subheading-2\\\">Value</th>\\r\\n      <th class=\\\"mat-subheading-2\\\">Date</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let lab of labs\\\">\\r\\n      <td>{{lab.labType}}</td>\\r\\n      <td>{{lab.labValue}}</td>\\r\\n      <td>{{lab.date | date: 'MM/dd/yyyy'}}<br>{{lab.date | date: 'hh:mm aa'}}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\\r\\n\\r\\n<table *ngIf=\\\"!isVisible\\\" class=\\\"table table-hover\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th class=\\\"mat-subheading-2\\\">Type</th>\\r\\n      <th class=\\\"mat-subheading-2\\\">Value</th>\\r\\n      <th class=\\\"mat-subheading-2\\\">Date</th>\\r\\n      <th></th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let lab of labs; let i = index\\\">\\r\\n      <td>{{lab.labType}}</td>\\r\\n      <td>{{lab.labValue}}</td>\\r\\n      <td>{{lab.date | date: 'MM/dd/yyyy'}}<br>{{lab.date | date: 'hh:mm aa'}}</td>\\r\\n      <td>\\r\\n        <button mat-raised-button color=\\\"warn\\\" (click)=\\\"softDeleteLab(i)\\\">\\r\\n          <i class=\\\"fas fa-times\\\"></i><Label></Label></button></td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\"","import { Component, OnInit } from '@angular/core';\nimport { GetPatientLabsService } from 'src/app/shared/services/get-patient-labs/get-patient-labs.service';\nimport { CurrentPatientService } from 'src/app/shared/services/current-patient/current-patient.service';\nimport { Http } from '@angular/http';\n\n@Component({\n  selector: 'patient-profile',\n  templateUrl: './patient-profile.component.html',\n  styleUrls: ['./patient-profile.component.css']\n})\nexport class PatientProfileComponent implements OnInit {\n  patient: any;\n  labs: any[];\n  isVisible = true;\n\n  private url: string = 'http://localhost:44400/api/labscollection';\n\n  constructor(\n    private currentPatientService: CurrentPatientService,\n    private getPatientLabsService: GetPatientLabsService,\n    private http: Http) {\n  }\n\n  ngOnInit() {\n    this.patient = this.currentPatientService.getCurrentPatient();\n\n    this.getPatientLabsService.getPatientLabs(this.patient.patientId)\n      .subscribe(response => {\n        this.labs = response.json();\n      })\n  }\n\n  softDeleteLab(index: any) {\n    this.labs[index].labValue = 123;\n    this.http.put(this.url + '/' + this.labs[index].id, this.labs[index])\n      .subscribe(response => {\n        console.log(response.json());\n      });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnRzL3ZpZXctYWxsLXBhdGllbnRzL3ZpZXctYWxsLXBhdGllbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h1>\\r\\n  <i class=\\\"fas fa-users d-inline-block mr-3\\\"></i>Patients\\r\\n  <div class=\\\"d-inline-block float-right\\\">\\r\\n    <button mat-raised-button routerLink=\\\"../\\\" class=\\\"mr-3\\\">\\r\\n      <i class=\\\"fas fa-arrow-left mr-3\\\"></i>Overview</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"new\\\">\\r\\n      <i class=\\\"fas fa-user-plus mr-3\\\"></i>New Patient</button>\\r\\n  </div>\\r\\n</h1>\\r\\n\\r\\n<table class=\\\"table table-hover\\\">\\r\\n  <thead>\\r\\n    <tr>\\r\\n      <th class=\\\"mat-subheading-2\\\">Last Name</th>\\r\\n      <th class=\\\"mat-subheading-2\\\">First Name</th>\\r\\n      <th class=\\\"mat-subheading-2\\\">Patient Id</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n  <tbody>\\r\\n    <tr *ngFor=\\\"let patient of patients\\\" routerLink=\\\"profile\\\" (click)=\\\"patientSelected(patient)\\\">\\r\\n      <td>{{patient.lastName}}</td>\\r\\n      <td>{{patient.firstName}}</td>\\r\\n      <td>{{patient.patientId}}</td>\\r\\n    </tr>\\r\\n  </tbody>\\r\\n</table>\"","import { CurrentPatientService } from './../../../shared/services/current-patient/current-patient.service';\r\nimport { ViewAllPatientsService } from './../../../shared/services/view-all-patients/view-all-patients.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'view-all-patients',\r\n  templateUrl: './view-all-patients.component.html',\r\n  styleUrls: ['./view-all-patients.component.css']\r\n})\r\nexport class ViewAllPatientsComponent implements OnInit {\r\n  patients: any[];\r\n\r\n  constructor(\r\n    private viewAllPatientsService: ViewAllPatientsService,\r\n    private currentPatientService: CurrentPatientService) {\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.viewAllPatientsService.getAllPatients()\r\n      .subscribe(response => {\r\n        this.patients = response.json();\r\n      })\r\n  }\r\n\r\n  patientSelected(patient: any) {\r\n    this.currentPatientService.setCurrentPatient(patient);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CurrentPatientService {\n  private currentPatient = {};\n\n  constructor() {\n  }\n\n  setCurrentPatient(patient: any) {      \n    this.currentPatient = patient;  \n  }\n  \n  getCurrentPatient() {  \n    return this.currentPatient;  \n  }\n}\n","import { Http } from '@angular/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetAllLabTypesService {\n  private url: string = 'http://localhost:44400/api/labstype';\n\n  constructor(private http: Http) { }\n\n  getAllLabTypes() {\n    return this.http.get(this.url);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport { CurrentPatientService } from '../current-patient/current-patient.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GetPatientLabsService {\n  currentPatient: any = this.currentPatientService.getCurrentPatient();\n  private url: string = 'http://localhost:44400/api/labscollection';\n\n  constructor(\n    private http: Http,\n    private currentPatientService: CurrentPatientService) {\n  }\n  \n  getPatientLabs(patientId: string) {\n    console.log(this.http.get(this.url + '/' + patientId));\n    return this.http.get(this.url + '/' + patientId);\n  }\n}","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewAllPatientsService {\n  private url: string = 'http://localhost:44300/api/patients';\n\n  constructor(private http: Http) { }\n  \n  getAllPatients() {\n    return this.http.get(this.url);\n  }\n}"],"sourceRoot":""}